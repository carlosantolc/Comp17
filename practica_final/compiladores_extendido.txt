program					-> 	func id ( ) { declarations statement_list }
declarations			-> 	declarations var identifier_list;
						|	declarations let identifier_list;
						| 	declarations float identifier_list_float;
						|	declarations boolean identifier_list_boolean;
identifier_list 		-> 	asig
						|	identifier_list , asig
asig					->	asig
						|	id = expression
identifier_list_float	->	asig_float
						|	identifier_list_float , asig_float
asig_float				->	id
						|	id = expression_float
identifier_list_boolean	->	asig_boolean
						|	identifier_list_boolean , asig_boolean
asig_boolean			->	id
						|	id = expression_boolean
statement_list			->	statement_list statement
						|	Î»
statement 				->	id = expression ;
						|	id = expression_float ;
						|	id = expression_boolean ;
						|	{ statement_list }
						|	if ( expression_comparacion ) statement else statement
						|	if ( expression_comparacion ) statement
						|	while ( expression_comparacion ) statement
						|	print print_list ;
						|	read read_list ;
print_list				->	print_item
						|	print_list , print_item
print_item				->	expression
						|	expression_float
						|	expression_boolean
read_list				->	id
						|	read_list , id
expression_comparacion	->	expression < expression
						|	expression > expression
						|	expression <= expression
						|	expression >= expression
						|	expression != expression
						|	expression == expression
						|	expression_float < expression_float
						|	expression_float > expression_float
						|	expression_float <= expression_float
						|	expression_float >= expression_float
						|	expression_float != expression_float
						|	expression_float == expression_float
						|	expression_boolean
						|	! expression_comparacion
						|	expression_comparacion && expression_comparacion
						|	expression_comparacion || expression_comparacion
expression 				->	expression + expression
						|	expression - expression
						|	expression * expression
						|	expression / expression
						|	- expression
						|	( expression )
						|	id
						|	num
expression_float		->	expression_float + expression_float
						|	expression_float - expression_float
						|	expression * expression_float
						|	expression / expression_float
						|	- expression_float
						|	( expression_float )
						|	id
						|	dec
expression_boolean		->	id
						|	true
						|	false							